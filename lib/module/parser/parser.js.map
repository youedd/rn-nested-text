{"version":3,"sources":["parser.js"],"names":["parser","o","k","v","l","length","$V0","$V1","$V2","$V3","$V4","trace","yy","symbols_","terminals_","productions_","performAction","anonymous","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","tags","map","tag","replace","trim","Error","children","table","defaultActions","parseError","str","hash","recoverable","error","parse","input","self","stack","tstack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","push","ranges","options","getPrototypeOf","popStack","n","_token_stack","lex","token","symbol","preErrorSymbol","state","action","a","r","yyval","p","len","newState","expected","errStr","showPosition","join","text","match","line","loc","Array","first_line","last_line","first_column","last_column","range","apply","concat","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","lines","unput","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","YYSTATE","Parser"],"mappings":"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","sourcesContent":["/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[2,3],$V1=[1,6],$V2=[1,7],$V3=[5,10],$V4=[5,9,10,11];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"content\":3,\"mixedText\":4,\"EOF\":5,\"textOrElement\":6,\"element\":7,\"text\":8,\"START_TAG\":9,\"END_TAG\":10,\"CHAR\":11,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",9:\"START_TAG\",10:\"END_TAG\",11:\"CHAR\"},\nproductions_: [0,[3,2],[4,2],[4,0],[6,1],[6,1],[7,3],[8,2],[8,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\nreturn $$[$0-1];\nbreak;\ncase 2:\nthis.$ = [$$[$0-1], ...$$[$0]];\nbreak;\ncase 3:\nthis.$ = [];\nbreak;\ncase 6:\n\n            const tags = [$$[$0-2], $$[$0]].map(tag => tag.replace(/(^\\<\\/?)|(\\>$)/g, '').trim());\n            if (tags[0] !== tags[1]) {\n                throw new Error('Invalid closing tag ' + $$[$0])\n            }\n\n            this.$ = { tag: tags[0], children: $$[$0-1] };\n        \nbreak;\ncase 7:\nthis.$ = $$[$0-1] + $$[$0];\nbreak;\ncase 8:\nthis.$ = $$[$0];\nbreak;\n}\n},\ntable: [{3:1,4:2,5:$V0,6:3,7:4,8:5,9:$V1,11:$V2},{1:[3]},{5:[1,8]},o($V3,$V0,{6:3,7:4,8:5,4:9,9:$V1,11:$V2}),o($V4,[2,4]),o($V4,[2,5]),{4:10,6:3,7:4,8:5,9:$V1,10:$V0,11:$V2},o([5,9,10],[2,8],{8:11,11:$V2}),{1:[2,1]},o($V3,[2,2]),{10:[1,12]},o($V4,[2,7]),o($V4,[2,6])],\ndefaultActions: {8:[2,1]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 10;\nbreak;\ncase 1:return 9;\nbreak;\ncase 2:return 11\nbreak;\ncase 3:return 5;\nbreak;\n}\n},\nrules: [/^(?:<\\/(.+?)>)/,/^(?:<(.+?)>)/,/^(?:(.|\\n))/,/^(?:$)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\nexport default parser"]}